{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\src\\\\components\\\\signup\\\\signup.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './signup.styles.scss';\nimport { connect } from 'react-redux';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      signUpStart(displayName, email, password, confirmPassword); // if(password !== confirmPassword) {\n      // \talert(\"password don't match\");\n      // \treturn; \n      // } \n      // try {\n      // \tconst { user } = await auth.createUserWithEmailAndPassword(email, password);\n      // \tawait createUserProfileDocument(user, { displayName});\n      // \tthis.setState({\n      // \tdisplayName: '',\n      // \temail: '',\n      // \tpassword: '',\n      // \tconfirmPassword: ''\n      // });\n      // } catch (error) {\n      // \tconsole.error(error);\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" I do not have an account \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Sign up with your e-mail and password \"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"E-mail\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" SIGN UP \")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart({\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\components\\signup\\signup.component.jsx"],"names":["React","FormInput","CustomButton","connect","auth","createUserProfileDocument","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","state","displayName","email","password","confirmPassword","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './signup.styles.scss'; \r\n\r\nimport { connect } from 'react-redux';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport { signUpStart } from '../../redux/user/user.actions'; \r\n\r\nclass SignUp extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdisplayName: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tconfirmPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = async event => {\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\tconst  { signUpStart } = this.props;\r\n\t\tconst {displayName, email, password, confirmPassword} = this.state;\r\n\t\t\r\n\t\tsignUpStart( displayName, email, password, confirmPassword );\r\n\r\n\t\t// if(password !== confirmPassword) {\r\n\t\t// \talert(\"password don't match\");\r\n\t\t// \treturn; \r\n\t\t// } \r\n\t\t// try {\r\n\t\t// \tconst { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\t\t// \tawait createUserProfileDocument(user, { displayName});\r\n\t\t// \tthis.setState({\r\n\t\t// \tdisplayName: '',\r\n\t\t// \temail: '',\r\n\t\t// \tpassword: '',\r\n\t\t// \tconfirmPassword: ''\r\n\t\t// });\r\n\t\t// } catch (error) {\r\n\t\t// \tconsole.error(error);\r\n\t\t// }\r\n\t};\r\n\r\n\thandleChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({[name]: value});\r\n\t};\r\n\t\r\n\trender() {\r\n\t\tconst {displayName, email, password, confirmPassword} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className = 'sign-up'>\r\n\t\t\t\t<h2 className = 'title'> I do not have an account </h2>\r\n\t\t\t\t<span> Sign up with your e-mail and password </span>\r\n\t\t\t\t<form className = 'sign-up-form' onSubmit = {this.handleSubmit}>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'text'\r\n\t\t\t\t\t\tname = 'displayName'\r\n\t\t\t\t\t\tvalue = {displayName}\r\n\t\t\t\t\t\tonChange = {this.handleChange}\r\n\t\t\t\t\t\tlabel = 'Display Name'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'email'\r\n\t\t\t\t\t\tname = 'email'\r\n\t\t\t\t\t\tvalue = {email}\r\n\t\t\t\t\t\tonChange = {this.handleChange}\r\n\t\t\t\t\t\tlabel = 'E-mail'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\tname = 'password'\r\n\t\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\t\tonChange = {this.handleChange}\r\n\t\t\t\t\t\tlabel = 'Password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\tname = 'confirmPassword'\r\n\t\t\t\t\t\tvalue = {confirmPassword}\r\n\t\t\t\t\t\tonChange = {this.handleChange}\r\n\t\t\t\t\t\tlabel = 'Confirm Password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CustomButton type = 'submit'> SIGN UP </CustomButton>\r\n\t\t\t\t</form>\t\t\r\n\t\t\t</div>\t\r\n\t\t\t)\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tsignUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart({displayName, email, password, confirmPassword}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}