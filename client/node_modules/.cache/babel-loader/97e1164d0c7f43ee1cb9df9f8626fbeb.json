{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\redux\\store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA8B,eAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAAUC,qBAAV,QAAuC,mBAAvC;AAGA,MAAOC,cAAc,GAAGF,oBAAoB,EAA5C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC3CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACA;;AACD,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from  'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport {  fetchCollectionsStart } from './shop/shop.sagas'\r\n\r\n\r\nconst  sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n\tmiddlewares.push(logger);\r\n}\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(fetchCollectionsStart);\r\n\r\nexport const persistor = persistStore(store);\r\n \r\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}