{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\src\\\\pages\\\\shoppage\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collectionpage/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\pages\\shoppage\\shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverviewContainer","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,yBAAyB,GAAGD,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEtCC,EAAAA,iBAAiB,GAAG;AAAA,UACVP,0BADU,GACqB,KAAKQ,KAD1B,CACVR,0BADU;AAEnBA,IAAAA,0BAA0B;AAC1B;;AAEDS,EAAAA,MAAM,GAAI;AAAA,wBACoD,KAAKD,KADzD;AAAA,UACDE,KADC,eACDA,KADC;AAAA,UACMC,oBADN,eACMA,oBADN;AAAA,UAC4BC,mBAD5B,eAC4BA,mBAD5B;AAGT,WACC;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAOF,KAAK,CAACG,IAAb,CAAjB;AACC,MAAA,MAAM,EAAKL,KAAD,IAAa,oBAAC,8BAAD;AACvB,QAAA,SAAS,EAAIG;AADU,SACeH,KADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAMA,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAME,KAAK,CAACG,IAAZ,mBAAX;AACC,MAAA,MAAM,EAAIL,KAAD,IAAa,oBAAC,yBAAD;AACtB,QAAA,SAAS,EAAI,CAACI;AADQ,SACiBJ,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADD;AAcA;;AAxBqC;;AA2BvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAChDe,EAAAA,oBAAoB,EAAEV,0BAD0B;AAEhDW,EAAAA,mBAAmB,EAAEV;AAF2B,CAAD,CAAhD;;AAKA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACvChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAMiB,eAAN,EAAsBC,kBAAtB,CAAP,CAAiDV,QAAjD,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPage from '../collectionpage/collection.component';\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst  { fetchCollectionsStartAsync } = this.props;\r\n\t\tfetchCollectionsStartAsync();\r\n\t}\r\n \r\n\trender () { \r\n\t\tconst { match, isCollectionFetching, isCollectionsLoaded } = this.props;\r\n\t\t \r\n\t\treturn (  \r\n\t\t\t<div className = 'shop-page'>\r\n\t\t\t<Route exact path = {`${match.path}`} \r\n\t\t\t\trender = {(props) => ( <CollectionsOverviewWithSpinner \r\n\t\t\t\tisLoading = {isCollectionFetching}{...props} /> \r\n\t\t\t\t)}  \r\n\t\t\t/>\r\n\t\t\t<Route path ={`${match.path}/:collectionId`} \r\n\t\t\t\trender= {(props) => ( <CollectionPageWithSpinner\r\n\t\t\t\tisLoading = {!isCollectionsLoaded} {...props}  /> \r\n\t\t\t\t)} \r\n\t\t\t/> \r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tisCollectionFetching: selectIsCollectionFetching,\r\n\tisCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(null,mapStateToProps,mapDispatchToProps)(ShopPage); "]},"metadata":{},"sourceType":"module"}