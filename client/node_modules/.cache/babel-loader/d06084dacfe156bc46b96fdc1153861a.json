{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\client\\\\src\\\\components\\\\signup\\\\signup.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './signup.styles.scss';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //const  { signUpStart } = this.props;\n    //const {displayName, email, password, confirmPassword} = this.state;\n\n    signUpStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }); // if(password !== confirmPassword) {\n    // \talert(\"password don't match\");\n    // \treturn; \n    // } \n    // try {\n    // \tconst { user } = await auth.createUserWithEmailAndPassword(email, password);\n    // \tawait createUserProfileDocument(user, { displayName});\n    // \tthis.setState({\n    // \tdisplayName: '',\n    // \temail: '',\n    // \tpassword: '',\n    // \tconfirmPassword: ''\n    // });\n    // } catch (error) {\n    // \tconsole.error(error);\n    // }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" I do not have an account \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" Sign up with your e-mail and password \"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"E-mail\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" SIGN UP \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: registrationDatas => dispatch(signUpStart(registrationDatas))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\client\\src\\components\\signup\\signup.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","name","value","mapDispatchToProps","dispatch","registrationDatas"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './signup.styles.scss'; \r\n\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../redux/user/user.actions'; \r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n\tconst [userCredentials, setCredentials ] = useState({displayName: '', email: '', password: '', confirmPassword: ''});\r\n\tconst {displayName, email, password, confirmPassword} = userCredentials;\r\n\tconst handleSubmit = async event => {\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\t//const  { signUpStart } = this.props;\r\n\t\t//const {displayName, email, password, confirmPassword} = this.state;\r\n\t\tsignUpStart( {displayName, email, password, confirmPassword} );\r\n\r\n\t\t// if(password !== confirmPassword) {\r\n\t\t// \talert(\"password don't match\");\r\n\t\t// \treturn; \r\n\t\t// } \r\n\t\t// try {\r\n\t\t// \tconst { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\t\t// \tawait createUserProfileDocument(user, { displayName});\r\n\t\t// \tthis.setState({\r\n\t\t// \tdisplayName: '',\r\n\t\t// \temail: '',\r\n\t\t// \tpassword: '',\r\n\t\t// \tconfirmPassword: ''\r\n\t\t// });\r\n\t\t// } catch (error) {\r\n\t\t// \tconsole.error(error);\r\n\t\t// }\r\n\t};\r\n\r\n\tconst handleChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetCredentials({...userCredentials, [name]: value});\r\n\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className = 'sign-up'>\r\n\t\t\t\t<h2 className = 'title'> I do not have an account </h2>\r\n\t\t\t\t<span> Sign up with your e-mail and password </span>\r\n\t\t\t\t<form className = 'sign-up-form' onSubmit = {handleSubmit}>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'text'\r\n\t\t\t\t\t\tname = 'displayName'\r\n\t\t\t\t\t\tvalue = {displayName}\r\n\t\t\t\t\t\tonChange = {handleChange}\r\n\t\t\t\t\t\tlabel = 'Display Name'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'email'\r\n\t\t\t\t\t\tname = 'email'\r\n\t\t\t\t\t\tvalue = {email}\r\n\t\t\t\t\t\tonChange = {handleChange}\r\n\t\t\t\t\t\tlabel = 'E-mail'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\tname = 'password'\r\n\t\t\t\t\t\tvalue = {password}\r\n\t\t\t\t\t\tonChange = {handleChange}\r\n\t\t\t\t\t\tlabel = 'Password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype = 'password'\r\n\t\t\t\t\t\tname = 'confirmPassword'\r\n\t\t\t\t\t\tvalue = {confirmPassword}\r\n\t\t\t\t\t\tonChange = {handleChange}\r\n\t\t\t\t\t\tlabel = 'Confirm Password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CustomButton type = 'submit'> SIGN UP </CustomButton>\r\n\t\t\t\t</form>\t\t\r\n\t\t\t</div>\t\r\n\t\t\t)\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tsignUpStart: registrationDatas => dispatch(signUpStart(registrationDatas))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}