{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // fetch('https://firestore.googleapis.com/v1/projects/onlinestore-db/databases/(default)/documents/collections')\n  // .then(response => response.json())\n  // .then(collections => console.log(collections));\n  // collectionRef.get().then(snapshot => {\n  // \tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  // \tdispatch(fetchCollectionsSuccess(collectionsMap));\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\redux\\shop\\shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACE,MAAG;AACJ,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACA,GALC,CAKA,OAAOC,KAAP,EAAa;AACb,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA,GATsC,CAUvC;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAOlB,UAAU,CAChBO,eAAe,CAACY,uBADA,EAEhBX,qBAFgB,CAAjB;AAKA","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n\tyield console.log('i am fired');\r\n\t  try{\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\r\n\t} catch (error){\r\n\t\t\tyield put(fetchCollectionsFailure(error.message));\r\n\t\t}\r\n\t\t// fetch('https://firestore.googleapis.com/v1/projects/onlinestore-db/databases/(default)/documents/collections')\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(collections => console.log(collections));\r\n\t\t\r\n\t\t// collectionRef.get().then(snapshot => {\r\n\t\t// \tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t// \tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t\t\t\r\n\t\t// }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield  takeLatest(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsAsync\r\n\t\t);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}