{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id == cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id == cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\redux\\cart\\cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAAEC,SAAF,EAAaC,aAAb,KAA+B;AAC3D,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeJ,aAAa,CAACI,EAAxD,CAAzB;;AAIC,MAAIH,gBAAJ,EAAsB;AACrB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAQ,IAC7BA,QAAQ,CAACC,EAAT,IAAeJ,aAAa,CAACI,EAA7B,qBACQD,QADR;AACkBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AADhD,SAEGH,QAHG,CAAP;AAKA;;AAED,SAAO,CAAE,GAAGJ,SAAL,oBAAqBC,aAArB;AAAoCM,IAAAA,QAAQ,EAAE;AAA9C,KAAP;AACD,CAdM","sourcesContent":["export const addItemToCart = ( cartItems, cartItemToAdd) => {\r\n\tconst existingCartItem = cartItems.find(cartItem => cartItem.id == cartItemToAdd.id\r\n\t\t); \r\n\r\n\r\n\t\tif (existingCartItem) {\r\n\t\t\treturn cartItems.map( cartItem => \r\n\t\t\t\tcartItem.id == cartItemToAdd.id\r\n\t\t\t\t\t? { ...cartItem, quantity: cartItem.quantity + 1}\r\n\t\t\t\t\t: cartItem\r\n\t\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn [ ...cartItems, { ...cartItemToAdd, quantity: 1 }]\r\n};"]},"metadata":{},"sourceType":"module"}