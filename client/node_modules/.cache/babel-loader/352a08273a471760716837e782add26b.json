{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItmes: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItmes: [...state.cartItmes, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\redux\\cart\\cart.reducer.js"],"names":["CartActionTypes","INITIAL_STATE","hidden","cartItmes","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,MAAM,EAAE,IADa;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAAEC,KAAK,GAAGJ,aAAV,EAAyBK,MAAzB,KAAoC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,eAAe,CAACQ,kBAArB;AACC,+BACIH,KADJ;AAECH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFhB;;AAKD,SAAKF,eAAe,CAACS,QAArB;AACC,+BACIJ,KADJ;AAECF,QAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACI,OAA5B;AAFZ;;AAKD;AACC,aAAOL,KAAP;AAdF;AAiBA,CAlBD;;AAoBA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types' \r\nconst INITIAL_STATE = {\r\n\thidden: true,\r\n\tcartItmes: []\r\n};\r\n\r\nconst cartReducer = ( state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CartActionTypes.TOGGLE_CART_HIDDEN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\thidden: !state.hidden\r\n\r\n\t\t\t}\r\n\t\tcase CartActionTypes.ADD_ITEM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcartItmes: [...state.cartItmes, action.payload]\r\n\r\n\t\t\t};\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\r\n\t} \r\n};\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}