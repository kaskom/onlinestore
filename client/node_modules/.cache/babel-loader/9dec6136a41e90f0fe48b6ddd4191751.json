{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart()); // fetch('https://firestore.googleapis.com/v1/projects/onlinestore-db/databases/(default)/documents/collections')\n    // .then(response => response.json())\n    // .then(collections => console.log(collections));\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\redux\\shop\\shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAC,OAAOA,eAAP,MAA4B,cAA5B;AAED,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADqB,CAAP,CAA9B;AAKP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACzDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADmC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADiC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAFkB,CAGlB;AACA;AACA;;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACpC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AAEA,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAKA,GAXD;AAYA,CAbM","sourcesContent":[" import ShopActionTypes from './shop.types';\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START\r\n\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n\tpayload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n\tpayload: errorMessage \r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n\treturn dispatch => {\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tdispatch(fetchCollectionsStart());\r\n\t\t// fetch('https://firestore.googleapis.com/v1/projects/onlinestore-db/databases/(default)/documents/collections')\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(collections => console.log(collections));\r\n\t\tcollectionRef.get().then(snapshot => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t\t\t\r\n\t\t}).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}