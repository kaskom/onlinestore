{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u041C\\u0438\\u0440\\u043E\\u043B\\u044E\\u0431\\\\Desktop\\\\devPro\\\\onlinestore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* isUserAuth() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuth);\n}\nexport function* signOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuth), call(signOutStart)]);\n}","map":{"version":3,"sources":["C:\\Users\\Миролюб\\Desktop\\devPro\\onlinestore\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuth","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure } from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n\ttry {\r\n\t  \tconst userRef = yield call(createUserProfileDocument, userAuth);\r\n\t\tconst userSnapshot = yield userRef.get(); \r\n \t\tyield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n\t} catch(error){\r\n\t\tyield put(SignInFailure(error));\r\n\t}\r\n}\r\n \r\n export function* signInWithGoogle() {\r\n \ttry {\r\n \t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n \t\tyield getSnapshotFromUserAuth(user);\r\n \t} catch (error) {\r\n \t\tyield put(SignInFailure(error));\r\n \t}\r\n}\r\n\r\nexport function* signInWithEmail({payload: { email, password }}) {\r\n\ttry { \r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch(error){\r\n\t\tyield put(SignInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* isUserAuth() {\r\n\ttry{\r\n\t\tconst userAuth = yield getCurrentUser();\r\n\t\tif (!userAuth) return;\r\n\t\t yield getSnapshotFromUserAuth(userAuth);\r\n\t}catch(error){\r\n\t\tyield put(SignInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signOut() {\r\n\ttry {\r\n\t\tyield auth.signOut();\r\n\t\tyield put(signOutSuccess())\r\n\t} catch(error){\r\n\t\tyield put(signOutFailure(error))\r\n\t}\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuth)\r\n}\r\n\r\nexport function* signOutStart() {\r\n\t\tyield takeLatest(UserActionTypes.SIGN_OUT_START, )\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuth), call(signOutStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}